{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a response interceptor for token refresh\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  const originalRequest = error.config;\n\n  // If error is 401 and not a retry\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    try {\n      // Get refresh token\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) {\n        // If no refresh token, logout\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        return Promise.reject(error);\n      }\n\n      // Try to get a new token\n      const response = await axios.post('/api/token/refresh/', {\n        refresh: refreshToken\n      });\n\n      // Store new tokens\n      localStorage.setItem('token', response.data.access);\n\n      // Update auth header\n      originalRequest.headers['Authorization'] = `Bearer ${response.data.access}`;\n      api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\n\n      // Retry the original request\n      return api(originalRequest);\n    } catch (refreshError) {\n      // If refresh fails, logout\n      localStorage.removeItem('token');\n      localStorage.removeItem('refreshToken');\n      return Promise.reject(refreshError);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","headers","interceptors","response","use","error","_error$response","originalRequest","config","status","_retry","refreshToken","localStorage","getItem","removeItem","Promise","reject","post","refresh","setItem","data","access","defaults","common","refreshError"],"sources":["/Users/samanthabadeau/Desktop/neurointerview/frontend/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add a response interceptor for token refresh\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n\n    // If error is 401 and not a retry\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        // Get refresh token\n        const refreshToken = localStorage.getItem('refreshToken');\n\n        if (!refreshToken) {\n          // If no refresh token, logout\n          localStorage.removeItem('token');\n          localStorage.removeItem('refreshToken');\n          return Promise.reject(error);\n        }\n\n        // Try to get a new token\n        const response = await axios.post('/api/token/refresh/', {\n          refresh: refreshToken,\n        });\n\n        // Store new tokens\n        localStorage.setItem('token', response.data.access);\n\n        // Update auth header\n        originalRequest.headers['Authorization'] = `Bearer ${response.data.access}`;\n        api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\n\n        // Retry the original request\n        return api(originalRequest);\n      } catch (refreshError) {\n        // If refresh fails, logout\n        localStorage.removeItem('token');\n        localStorage.removeItem('refreshToken');\n        return Promise.reject(refreshError);\n      }\n    }\n\n    return Promise.reject(error);\n  }\n);\n\nexport default api;"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,IAAKA,QAAQ,EACtB,MAAOE,KAAK,IAAK;EAAA,IAAAC,eAAA;EACf,MAAMC,eAAe,GAAGF,KAAK,CAACG,MAAM;;EAEpC;EACA,IAAI,EAAAF,eAAA,GAAAD,KAAK,CAACF,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBG,MAAM,MAAK,GAAG,IAAI,CAACF,eAAe,CAACG,MAAM,EAAE;IAC7DH,eAAe,CAACG,MAAM,GAAG,IAAI;IAE7B,IAAI;MACF;MACA,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MAEzD,IAAI,CAACF,YAAY,EAAE;QACjB;QACAC,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;QAChCF,YAAY,CAACE,UAAU,CAAC,cAAc,CAAC;QACvC,OAAOC,OAAO,CAACC,MAAM,CAACX,KAAK,CAAC;MAC9B;;MAEA;MACA,MAAMF,QAAQ,GAAG,MAAMT,KAAK,CAACuB,IAAI,CAAC,qBAAqB,EAAE;QACvDC,OAAO,EAAEP;MACX,CAAC,CAAC;;MAEF;MACAC,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEhB,QAAQ,CAACiB,IAAI,CAACC,MAAM,CAAC;;MAEnD;MACAd,eAAe,CAACN,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUE,QAAQ,CAACiB,IAAI,CAACC,MAAM,EAAE;MAC3E1B,GAAG,CAAC2B,QAAQ,CAACrB,OAAO,CAACsB,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUpB,QAAQ,CAACiB,IAAI,CAACC,MAAM,EAAE;;MAE/E;MACA,OAAO1B,GAAG,CAACY,eAAe,CAAC;IAC7B,CAAC,CAAC,OAAOiB,YAAY,EAAE;MACrB;MACAZ,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;MAChCF,YAAY,CAACE,UAAU,CAAC,cAAc,CAAC;MACvC,OAAOC,OAAO,CAACC,MAAM,CAACQ,YAAY,CAAC;IACrC;EACF;EAEA,OAAOT,OAAO,CAACC,MAAM,CAACX,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
