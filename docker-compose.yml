version: '3.8'

services:
  # MongoDB service
  mongo:
    image: mongo:5.0
    container_name: neurointerview-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
    networks:
      - neurointerview-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # MongoDB Express (Web-based MongoDB admin interface)
  mongo-express:
    image: mongo-express:latest
    container_name: neurointerview-mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpassword
      - ME_CONFIG_MONGODB_SERVER=mongo
    depends_on:
      - mongo
    networks:
      - neurointerview-network

  # Django backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: neurointerview-backend
    restart: always
    volumes:
      - ./backend:/app
      - backend-static:/app/staticfiles
      - backend-media:/app/media
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - SECRET_KEY=development-secret-key-change-in-production
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_USER=root
      - MONGO_PASSWORD=rootpassword
      - MONGO_DB=neurointerview
      - ALLOWED_HOSTS=localhost,127.0.0.1,backend
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,http://frontend:3000
      - PYTHONUNBUFFERED=1
    depends_on:
      - mongo
    command: >
      sh -c "echo 'Waiting for MongoDB to be ready...' &&
             python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             echo 'Detecting changes, reloading environment...' &&
             watchmedo auto-restart \
               --recursive \
               --pattern='*.py' \
               --directory='/app' \
               --ignore-patterns='*/.*' \
               python manage.py runserver 0.0.0.0:8000"
    networks:
      - neurointerview-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Test service
  mongo-test:
    image: mongo:5.0
    container_name: neurointerview-mongo-test
    restart: "no"
    ports:
      - "27018:27017"
    volumes:
      - mongo-test-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=rootpassword
    networks:
      - neurointerview-network

  # Backend Test Service
  pycharm-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: eurointerview-pycharm-test
    restart: "no"
    volumes:
      - ./backend:/app
      - backend-test-static:/app/staticfiles
      - backend-test-media:/app/media
    environment:
      - DEBUG=True
      - SECRET_KEY=test-secret-key
      - MONGO_HOST=mongo-test
      - MONGO_PORT=27017
      - MONGO_USER=root
      - MONGO_PASSWORD=rootpassword
      - MONGO_DB=neurointerview_test
      - ALLOWED_HOSTS=localhost,127.0.0.1,pycharm-test
      - DJANGO_SETTINGS_MODULE=neurointerview.settings.test
    depends_on:
      - mongo-test
    command: >
      sh -c "python manage.py test"
    networks:
      - neurointerview-network

  # React frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: neurointerview-frontend
    restart: always
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
    depends_on:
      - backend
    command: npm start
    networks:
      - neurointerview-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Create simple seed data for development
  seed-data:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: neurointerview-seed
    restart: "no"
    volumes:
      - ./backend:/app
    environment:
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_USER=root
      - MONGO_PASSWORD=rootpassword
      - MONGO_DB=neurointerview
    depends_on:
      - mongo
      - backend
    command: >
      sh -c "python manage.py seed_demo_data"
    networks:
      - neurointerview-network

networks:
  neurointerview-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
  mongo-test-data:
    driver: local
  backend-static:
    driver: local
  backend-test-static:
    driver: local
  backend-media:
    driver: local
  backend-test-media:
    driver: local